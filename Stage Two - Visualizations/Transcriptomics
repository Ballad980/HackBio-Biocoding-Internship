This is a processed RNAseq dataset involving reading in quantitated gene expression data from an RNA-seq experiment, 
exploring the data using base R functions and then interpretation. The dataset contains an experiment between a diseased 
cell line and diseased cell lines treated with compound X. The difference in expression change between the two health status is 
computed as Fold change to log 2 (Log2FC) and the significance of each is computed in p-value.

*Task 1*
Generate a volcano plot.

url <- "https://gist.githubusercontent.com/stephenturner/806e31fce55a8b7175af/raw/1a507c4c3f9f1baaa3a69187223ff3d3050628d4/results.txt"
lines <- readLines(url) # Gave a warning
#Investigating the warning
field_counts <- sapply(lines, function(x) length(strsplit(x, "\t")[[1]]))
# View distribution of column counts
table(field_counts) # Showed all fields had only one column(a single string with all inputs separated by a space)
#Splitting the data
header <- strsplit(lines[1], " ")[[1]]
records <- strsplit(lines[-1], " ")
#Creating a dataframe
RNAseq <- as.data.frame(do.call(rbind, data_list), stringsAsFactors = FALSE)
colnames(RNAseq) <- header
head(RNAseq)
#Checking structure to ensure datatype accuracy
str(RNAseq)
#Coverting all numeric columns to correct datatype
RNAseq$log2FoldChange <- as.numeric(RNAseq$log2FoldChange)
RNAseq$pvalue <- as.numeric(RNAseq$pvalue)
RNAseq$padj <- as.numeric(RNAseq$padj)
#Confirming datatypes 
str(RNAseq)

#creating the volcano plot
plot(RNAseq$log2FoldChange, -log10(RNAseq$pvalue),
                      pch = 20, cex = 0.7,
                      col = "grey",
                      main = "RNA_seq Gene expression",
                      xlab = "log2(Fold Change)",
                      ylab = "-log10(p-value)")

*Task 2*
Determine the upregulated genes (Genes with Log2FC > 1 and pvalue < 0.01)

#Upregulated genes
# Subset the data
upregulated <- subset(RNAseq, pvalue < 0.01 & log2FoldChange > 1)
#plotting upregulated genes
with(upregulated,
     points(log2FoldChange, -log10(pvalue), pch = 18, col = "red"))

*Task 3*
Determine the downregulated genes (Genes with Log2FC < -1 and pvalue < 0.01)

# Subset the data
downregulated <- subset(RNAseq, pvalue < 0.01 & log2FoldChange < -1)
#plotting downregulated genes
with(downregulated,
     points(log2FoldChange, -log10(pvalue), pch = 18, col = "black")) 
#Adding legend
legend("bottomleft", legend = c("Upregulated", "Downregulated"),
       title = "Genes", fill = c("red", "black"))

*Task 4*
What are the functions of the top 5 upregulated genes and top 5 downregulated genes. (Use genecards)

# Showing labels of top 5 up and down regulated genes on plot
text(upregulated$log2FoldChange[1:5], 
    -log10(upregulated$pvalue[1:5]), 
    labels = upregulated$Gene[1:5], pos = 2, cex = 0.5)

text(downregulated$log2FoldChange[1:5], 
    -log10(downregulated$pvalue[1:5]), 
    labels = downregulated$Gene[1:5], pos = 4, cex = 0.5)

#Printing the names of top up and down regulated genes
top_upregulated <- upregulated$Gene[1:5]
top_downregulated <- downregulated$Gene[1:5]
print(paste("Top 5 upregulated genes are:", top_upregulated, 
            "Top 5 downregulated genes are:", top_downregulated))

#Getting their functions from genecards database
Top upregulated genes
1. EMILIN2
2. POU3F4
3. LOC285954
4. VEPH1
5. DTHD1

Top downregulated genes
1. TBX5
2. IFITM1
3. LAMA2
4. CAV2
5. TNN



